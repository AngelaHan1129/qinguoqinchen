// composables/pentest.ts
import { onUnmounted } from 'vue'

type LogLevel = 'info' | 'warning' | 'success' | 'error'

export function usePentest() {
    let progressTimer: number | undefined
    let simulateTimer: number | undefined
    let timeTimer: number | undefined
    let scrollHandler: ((e: Event) => void) | undefined

    // 新增一條 log 到容器（公開給外部）
    function addLogEntry(level: LogLevel, message: string) {
        const logContainer = document.getElementById('logContainer')
        if (!logContainer) return

        const entry = document.createElement('div')
        const timestamp = new Date().toLocaleTimeString()

        entry.className = `log-entry log-${level}`
        entry.textContent = `[${timestamp}] ${level.toUpperCase()} - ${message}`

        logContainer.appendChild(entry)
        logContainer.scrollTop = logContainer.scrollHeight

        // 限制條數，維持容器大小
        if (logContainer.children.length > 50) {
            logContainer.removeChild(logContainer.firstChild as ChildNode)
        }
    }

    // 模擬測試進度（隨機產生日誌）
    function startSimulateTestProgress() {
        const messages: { level: LogLevel; msg: string }[] = [
            { level: 'info', msg: 'XSS 攻擊向量測試中...' },
            { level: 'warning', msg: '檢測到潛在 XSS 漏洞' },
            { level: 'success', msg: 'CSRF 防護機制驗證通過' },
            { level: 'error', msg: '發現未授權存取漏洞' },
            { level: 'info', msg: 'AI 模型分析 Deepfake 樣本...' }
        ]

        // 立刻執行一次（選擇性），然後每 3 秒隨機加入一條
        simulateTimer = window.setInterval(() => {
            const msg = messages[Math.floor(Math.random() * messages.length)]
            addLogEntry(msg.level, msg.msg)
        }, 3000)
    }

    // 更新頂部顯示時間的 element
    function startUpdateTime() {
        const el = document.getElementById('currentTime')
        if (!el) return
        // 立即更新一次
        el.textContent = new Date().toLocaleString()
        timeTimer = window.setInterval(() => {
            el.textContent = new Date().toLocaleString()
        }, 1000)
    }

    // 綁定 logContainer 的 scroll 監聽（範例）
    function bindScrollListener() {
        const el = document.getElementById('logContainer')
        if (!el) return
        scrollHandler = () => {
            // 範例: 你可以在這邊做 lazy load、顯示滾動提示等
            // 目前只是 console.log 示意
            // eslint-disable-next-line no-console
            console.log('logContainer scrolled')
        }
        el.addEventListener('scroll', scrollHandler)
    }

    // 停止 / 清理所有 interval 與 listener
    function stop() {
        if (simulateTimer !== undefined) {
            clearInterval(simulateTimer)
            simulateTimer = undefined
        }
        if (timeTimer !== undefined) {
            clearInterval(timeTimer)
            timeTimer = undefined
        }
        if (progressTimer !== undefined) {
            clearInterval(progressTimer)
            progressTimer = undefined
        }
        if (scrollHandler) {
            const el = document.getElementById('logContainer')
            if (el) el.removeEventListener('scroll', scrollHandler)
            scrollHandler = undefined
        }
    }

    // 啟動所有模擬（由呼叫者在 onMounted 呼叫）
    function start() {
        startSimulateTestProgress()
        startUpdateTime()
        bindScrollListener()
    }

    // 確保在組件 unmount 時有自動清理（如果 composable 在 setup 階段直接被呼叫）
    onUnmounted(() => {
        stop()
    })

    return {
        start,
        stop,
        addLogEntry
    }
}
